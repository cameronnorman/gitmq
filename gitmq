#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative './lib/gitmq'
require_relative './lib/logger/stdout'
require_relative './lib/storage'

config = GitMQ::Config.new(
  # logger instance
  logger: GitMQ::Logger::Stdout.new,

  # set where to store data
  storage: GitMQ::Storage.new('/tmp/gitmq_storage')
)

consumer = GitMQ::Consumer.new(config)
producer = GitMQ::Producer.new(config)

Thread.new do
  loop do
    producer.publish('master', Time.now)
    producer.publish('test', Time.now)
    sleep 1
  end
end

[
  Thread.new { consumer.consume('master') { |m| puts 'master: ' + m } },
  Thread.new { consumer.consume('test') { |m| puts 'test: ' + m } }
].map(&:join)
